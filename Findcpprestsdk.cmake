########## MACROS ###########################################################################
#############################################################################################

function(conan_message MESSAGE_OUTPUT)
    if(NOT CONAN_CMAKE_SILENT_OUTPUT)
        message(${ARGV${0}})
    endif()
endfunction()


macro(conan_find_apple_frameworks FRAMEWORKS_FOUND FRAMEWORKS FRAMEWORKS_DIRS)
    if(APPLE)
        foreach(_FRAMEWORK ${FRAMEWORKS})
            # https://cmake.org/pipermail/cmake-developers/2017-August/030199.html
            find_library(CONAN_FRAMEWORK_${_FRAMEWORK}_FOUND NAMES ${_FRAMEWORK} PATHS ${FRAMEWORKS_DIRS} CMAKE_FIND_ROOT_PATH_BOTH)
            if(CONAN_FRAMEWORK_${_FRAMEWORK}_FOUND)
                list(APPEND ${FRAMEWORKS_FOUND} ${CONAN_FRAMEWORK_${_FRAMEWORK}_FOUND})
            else()
                message(FATAL_ERROR "Framework library ${_FRAMEWORK} not found in paths: ${FRAMEWORKS_DIRS}")
            endif()
        endforeach()
    endif()
endmacro()


function(conan_package_library_targets libraries package_libdir deps out_libraries out_libraries_target build_type package_name)
    unset(_CONAN_ACTUAL_TARGETS CACHE)
    unset(_CONAN_FOUND_SYSTEM_LIBS CACHE)
    foreach(_LIBRARY_NAME ${libraries})
        find_library(CONAN_FOUND_LIBRARY NAMES ${_LIBRARY_NAME} PATHS ${package_libdir}
                     NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
        if(CONAN_FOUND_LIBRARY)
            conan_message(STATUS "Library ${_LIBRARY_NAME} found ${CONAN_FOUND_LIBRARY}")
            list(APPEND _out_libraries ${CONAN_FOUND_LIBRARY})
            if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
                # Create a micro-target for each lib/a found
                string(REGEX REPLACE "[^A-Za-z0-9.+_-]" "_" _LIBRARY_NAME ${_LIBRARY_NAME})
                set(_LIB_NAME CONAN_LIB::${package_name}_${_LIBRARY_NAME}${build_type})
                if(NOT TARGET ${_LIB_NAME})
                    # Create a micro-target for each lib/a found
                    add_library(${_LIB_NAME} UNKNOWN IMPORTED)
                    set_target_properties(${_LIB_NAME} PROPERTIES IMPORTED_LOCATION ${CONAN_FOUND_LIBRARY})
                    set(_CONAN_ACTUAL_TARGETS ${_CONAN_ACTUAL_TARGETS} ${_LIB_NAME})
                else()
                    conan_message(STATUS "Skipping already existing target: ${_LIB_NAME}")
                endif()
                list(APPEND _out_libraries_target ${_LIB_NAME})
            endif()
            conan_message(STATUS "Found: ${CONAN_FOUND_LIBRARY}")
        else()
            conan_message(STATUS "Library ${_LIBRARY_NAME} not found in package, might be system one")
            list(APPEND _out_libraries_target ${_LIBRARY_NAME})
            list(APPEND _out_libraries ${_LIBRARY_NAME})
            set(_CONAN_FOUND_SYSTEM_LIBS "${_CONAN_FOUND_SYSTEM_LIBS};${_LIBRARY_NAME}")
        endif()
        unset(CONAN_FOUND_LIBRARY CACHE)
    endforeach()

    if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
        # Add all dependencies to all targets
        string(REPLACE " " ";" deps_list "${deps}")
        foreach(_CONAN_ACTUAL_TARGET ${_CONAN_ACTUAL_TARGETS})
            set_property(TARGET ${_CONAN_ACTUAL_TARGET} PROPERTY INTERFACE_LINK_LIBRARIES "${_CONAN_FOUND_SYSTEM_LIBS};${deps_list}")
        endforeach()
    endif()

    set(${out_libraries} ${_out_libraries} PARENT_SCOPE)
    set(${out_libraries_target} ${_out_libraries_target} PARENT_SCOPE)
endfunction()


########### FOUND PACKAGE ###################################################################
#############################################################################################

include(FindPackageHandleStandardArgs)

conan_message(STATUS "Conan: Using autogenerated Findcpprestsdk.cmake")
set(cpprestsdk_FOUND 1)
set(cpprestsdk_VERSION "2.10.18")

find_package_handle_standard_args(cpprestsdk REQUIRED_VARS
                                  cpprestsdk_VERSION VERSION_VAR cpprestsdk_VERSION)
mark_as_advanced(cpprestsdk_FOUND cpprestsdk_VERSION)

set(cpprestsdk_COMPONENTS cpprestsdk::cpprest cpprestsdk::cpprestsdk_boost_internal cpprestsdk::cpprestsdk_openssl_internal cpprestsdk::cpprestsdk_zlib_internal cpprestsdk::cpprestsdk_websocketpp_internal)

if(cpprestsdk_FIND_COMPONENTS)
    foreach(_FIND_COMPONENT ${cpprestsdk_FIND_COMPONENTS})
        list(FIND cpprestsdk_COMPONENTS "cpprestsdk::${_FIND_COMPONENT}" _index)
        if(${_index} EQUAL -1)
            conan_message(FATAL_ERROR "Conan: Component '${_FIND_COMPONENT}' NOT found in package 'cpprestsdk'")
        else()
            conan_message(STATUS "Conan: Component '${_FIND_COMPONENT}' found in package 'cpprestsdk'")
        endif()
    endforeach()
endif()

########### VARIABLES #######################################################################
#############################################################################################


set(cpprestsdk_INCLUDE_DIRS "/home/jules/.conan/data/cpprestsdk/2.10.18/_/_/package/875c8d5e342b1d3c83aa1c93c8b4dc61136cf014/include")
set(cpprestsdk_INCLUDE_DIR "/home/jules/.conan/data/cpprestsdk/2.10.18/_/_/package/875c8d5e342b1d3c83aa1c93c8b4dc61136cf014/include")
set(cpprestsdk_INCLUDES "/home/jules/.conan/data/cpprestsdk/2.10.18/_/_/package/875c8d5e342b1d3c83aa1c93c8b4dc61136cf014/include")
set(cpprestsdk_RES_DIRS )
set(cpprestsdk_DEFINITIONS "-D_NO_ASYNCRTIMP"
			"-D_NO_PPLXIMP")
set(cpprestsdk_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)
set(cpprestsdk_COMPILE_DEFINITIONS "_NO_ASYNCRTIMP"
			"_NO_PPLXIMP")
set(cpprestsdk_COMPILE_OPTIONS_LIST "" "")
set(cpprestsdk_COMPILE_OPTIONS_C "")
set(cpprestsdk_COMPILE_OPTIONS_CXX "")
set(cpprestsdk_LIBRARIES_TARGETS "") # Will be filled later, if CMake 3
set(cpprestsdk_LIBRARIES "") # Will be filled later
set(cpprestsdk_LIBS "") # Same as cpprestsdk_LIBRARIES
set(cpprestsdk_SYSTEM_LIBS pthread)
set(cpprestsdk_FRAMEWORK_DIRS )
set(cpprestsdk_FRAMEWORKS )
set(cpprestsdk_FRAMEWORKS_FOUND "") # Will be filled later
set(cpprestsdk_BUILD_MODULES_PATHS )

conan_find_apple_frameworks(cpprestsdk_FRAMEWORKS_FOUND "${cpprestsdk_FRAMEWORKS}" "${cpprestsdk_FRAMEWORK_DIRS}")

mark_as_advanced(cpprestsdk_INCLUDE_DIRS
                 cpprestsdk_INCLUDE_DIR
                 cpprestsdk_INCLUDES
                 cpprestsdk_DEFINITIONS
                 cpprestsdk_LINKER_FLAGS_LIST
                 cpprestsdk_COMPILE_DEFINITIONS
                 cpprestsdk_COMPILE_OPTIONS_LIST
                 cpprestsdk_LIBRARIES
                 cpprestsdk_LIBS
                 cpprestsdk_LIBRARIES_TARGETS)

# Find the real .lib/.a and add them to cpprestsdk_LIBS and cpprestsdk_LIBRARY_LIST
set(cpprestsdk_LIBRARY_LIST cpprest)
set(cpprestsdk_LIB_DIRS "/home/jules/.conan/data/cpprestsdk/2.10.18/_/_/package/875c8d5e342b1d3c83aa1c93c8b4dc61136cf014/lib")

# Gather all the libraries that should be linked to the targets (do not touch existing variables):
set(_cpprestsdk_DEPENDENCIES "${cpprestsdk_FRAMEWORKS_FOUND} ${cpprestsdk_SYSTEM_LIBS} Boost::Boost;OpenSSL::OpenSSL;ZLIB::ZLIB;websocketpp::websocketpp")

conan_package_library_targets("${cpprestsdk_LIBRARY_LIST}"  # libraries
                              "${cpprestsdk_LIB_DIRS}"      # package_libdir
                              "${_cpprestsdk_DEPENDENCIES}"  # deps
                              cpprestsdk_LIBRARIES            # out_libraries
                              cpprestsdk_LIBRARIES_TARGETS    # out_libraries_targets
                              ""                          # build_type
                              "cpprestsdk")                                      # package_name

set(cpprestsdk_LIBS ${cpprestsdk_LIBRARIES})

foreach(_FRAMEWORK ${cpprestsdk_FRAMEWORKS_FOUND})
    list(APPEND cpprestsdk_LIBRARIES_TARGETS ${_FRAMEWORK})
    list(APPEND cpprestsdk_LIBRARIES ${_FRAMEWORK})
endforeach()

foreach(_SYSTEM_LIB ${cpprestsdk_SYSTEM_LIBS})
    list(APPEND cpprestsdk_LIBRARIES_TARGETS ${_SYSTEM_LIB})
    list(APPEND cpprestsdk_LIBRARIES ${_SYSTEM_LIB})
endforeach()

# We need to add our requirements too
set(cpprestsdk_LIBRARIES_TARGETS "${cpprestsdk_LIBRARIES_TARGETS};Boost::Boost;OpenSSL::OpenSSL;ZLIB::ZLIB;websocketpp::websocketpp")
set(cpprestsdk_LIBRARIES "${cpprestsdk_LIBRARIES};Boost::Boost;OpenSSL::OpenSSL;ZLIB::ZLIB;websocketpp::websocketpp")

set(CMAKE_MODULE_PATH  ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH  ${CMAKE_PREFIX_PATH})


########### COMPONENT cpprestsdk_websocketpp_internal VARIABLES #############################################

set(cpprestsdk_cpprestsdk_websocketpp_internal_INCLUDE_DIRS )
set(cpprestsdk_cpprestsdk_websocketpp_internal_INCLUDE_DIR "")
set(cpprestsdk_cpprestsdk_websocketpp_internal_INCLUDES )
set(cpprestsdk_cpprestsdk_websocketpp_internal_LIB_DIRS "/home/jules/.conan/data/cpprestsdk/2.10.18/_/_/package/875c8d5e342b1d3c83aa1c93c8b4dc61136cf014/lib")
set(cpprestsdk_cpprestsdk_websocketpp_internal_RES_DIRS )
set(cpprestsdk_cpprestsdk_websocketpp_internal_DEFINITIONS )
set(cpprestsdk_cpprestsdk_websocketpp_internal_COMPILE_DEFINITIONS )
set(cpprestsdk_cpprestsdk_websocketpp_internal_COMPILE_OPTIONS_C "")
set(cpprestsdk_cpprestsdk_websocketpp_internal_COMPILE_OPTIONS_CXX "")
set(cpprestsdk_cpprestsdk_websocketpp_internal_LIBS )
set(cpprestsdk_cpprestsdk_websocketpp_internal_SYSTEM_LIBS )
set(cpprestsdk_cpprestsdk_websocketpp_internal_FRAMEWORK_DIRS )
set(cpprestsdk_cpprestsdk_websocketpp_internal_FRAMEWORKS )
set(cpprestsdk_cpprestsdk_websocketpp_internal_BUILD_MODULES_PATHS )
set(cpprestsdk_cpprestsdk_websocketpp_internal_DEPENDENCIES websocketpp::websocketpp)
set(cpprestsdk_cpprestsdk_websocketpp_internal_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT cpprestsdk_zlib_internal VARIABLES #############################################

set(cpprestsdk_cpprestsdk_zlib_internal_INCLUDE_DIRS )
set(cpprestsdk_cpprestsdk_zlib_internal_INCLUDE_DIR "")
set(cpprestsdk_cpprestsdk_zlib_internal_INCLUDES )
set(cpprestsdk_cpprestsdk_zlib_internal_LIB_DIRS "/home/jules/.conan/data/cpprestsdk/2.10.18/_/_/package/875c8d5e342b1d3c83aa1c93c8b4dc61136cf014/lib")
set(cpprestsdk_cpprestsdk_zlib_internal_RES_DIRS )
set(cpprestsdk_cpprestsdk_zlib_internal_DEFINITIONS )
set(cpprestsdk_cpprestsdk_zlib_internal_COMPILE_DEFINITIONS )
set(cpprestsdk_cpprestsdk_zlib_internal_COMPILE_OPTIONS_C "")
set(cpprestsdk_cpprestsdk_zlib_internal_COMPILE_OPTIONS_CXX "")
set(cpprestsdk_cpprestsdk_zlib_internal_LIBS )
set(cpprestsdk_cpprestsdk_zlib_internal_SYSTEM_LIBS )
set(cpprestsdk_cpprestsdk_zlib_internal_FRAMEWORK_DIRS )
set(cpprestsdk_cpprestsdk_zlib_internal_FRAMEWORKS )
set(cpprestsdk_cpprestsdk_zlib_internal_BUILD_MODULES_PATHS )
set(cpprestsdk_cpprestsdk_zlib_internal_DEPENDENCIES ZLIB::ZLIB)
set(cpprestsdk_cpprestsdk_zlib_internal_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT cpprestsdk_openssl_internal VARIABLES #############################################

set(cpprestsdk_cpprestsdk_openssl_internal_INCLUDE_DIRS )
set(cpprestsdk_cpprestsdk_openssl_internal_INCLUDE_DIR "")
set(cpprestsdk_cpprestsdk_openssl_internal_INCLUDES )
set(cpprestsdk_cpprestsdk_openssl_internal_LIB_DIRS "/home/jules/.conan/data/cpprestsdk/2.10.18/_/_/package/875c8d5e342b1d3c83aa1c93c8b4dc61136cf014/lib")
set(cpprestsdk_cpprestsdk_openssl_internal_RES_DIRS )
set(cpprestsdk_cpprestsdk_openssl_internal_DEFINITIONS )
set(cpprestsdk_cpprestsdk_openssl_internal_COMPILE_DEFINITIONS )
set(cpprestsdk_cpprestsdk_openssl_internal_COMPILE_OPTIONS_C "")
set(cpprestsdk_cpprestsdk_openssl_internal_COMPILE_OPTIONS_CXX "")
set(cpprestsdk_cpprestsdk_openssl_internal_LIBS )
set(cpprestsdk_cpprestsdk_openssl_internal_SYSTEM_LIBS )
set(cpprestsdk_cpprestsdk_openssl_internal_FRAMEWORK_DIRS )
set(cpprestsdk_cpprestsdk_openssl_internal_FRAMEWORKS )
set(cpprestsdk_cpprestsdk_openssl_internal_BUILD_MODULES_PATHS )
set(cpprestsdk_cpprestsdk_openssl_internal_DEPENDENCIES OpenSSL::OpenSSL)
set(cpprestsdk_cpprestsdk_openssl_internal_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT cpprestsdk_boost_internal VARIABLES #############################################

set(cpprestsdk_cpprestsdk_boost_internal_INCLUDE_DIRS )
set(cpprestsdk_cpprestsdk_boost_internal_INCLUDE_DIR "")
set(cpprestsdk_cpprestsdk_boost_internal_INCLUDES )
set(cpprestsdk_cpprestsdk_boost_internal_LIB_DIRS "/home/jules/.conan/data/cpprestsdk/2.10.18/_/_/package/875c8d5e342b1d3c83aa1c93c8b4dc61136cf014/lib")
set(cpprestsdk_cpprestsdk_boost_internal_RES_DIRS )
set(cpprestsdk_cpprestsdk_boost_internal_DEFINITIONS )
set(cpprestsdk_cpprestsdk_boost_internal_COMPILE_DEFINITIONS )
set(cpprestsdk_cpprestsdk_boost_internal_COMPILE_OPTIONS_C "")
set(cpprestsdk_cpprestsdk_boost_internal_COMPILE_OPTIONS_CXX "")
set(cpprestsdk_cpprestsdk_boost_internal_LIBS )
set(cpprestsdk_cpprestsdk_boost_internal_SYSTEM_LIBS )
set(cpprestsdk_cpprestsdk_boost_internal_FRAMEWORK_DIRS )
set(cpprestsdk_cpprestsdk_boost_internal_FRAMEWORKS )
set(cpprestsdk_cpprestsdk_boost_internal_BUILD_MODULES_PATHS )
set(cpprestsdk_cpprestsdk_boost_internal_DEPENDENCIES Boost::Boost)
set(cpprestsdk_cpprestsdk_boost_internal_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT cpprest VARIABLES #############################################

set(cpprestsdk_cpprest_INCLUDE_DIRS "/home/jules/.conan/data/cpprestsdk/2.10.18/_/_/package/875c8d5e342b1d3c83aa1c93c8b4dc61136cf014/include")
set(cpprestsdk_cpprest_INCLUDE_DIR "/home/jules/.conan/data/cpprestsdk/2.10.18/_/_/package/875c8d5e342b1d3c83aa1c93c8b4dc61136cf014/include")
set(cpprestsdk_cpprest_INCLUDES "/home/jules/.conan/data/cpprestsdk/2.10.18/_/_/package/875c8d5e342b1d3c83aa1c93c8b4dc61136cf014/include")
set(cpprestsdk_cpprest_LIB_DIRS "/home/jules/.conan/data/cpprestsdk/2.10.18/_/_/package/875c8d5e342b1d3c83aa1c93c8b4dc61136cf014/lib")
set(cpprestsdk_cpprest_RES_DIRS )
set(cpprestsdk_cpprest_DEFINITIONS "-D_NO_ASYNCRTIMP"
			"-D_NO_PPLXIMP")
set(cpprestsdk_cpprest_COMPILE_DEFINITIONS "_NO_ASYNCRTIMP"
			"_NO_PPLXIMP")
set(cpprestsdk_cpprest_COMPILE_OPTIONS_C "")
set(cpprestsdk_cpprest_COMPILE_OPTIONS_CXX "")
set(cpprestsdk_cpprest_LIBS cpprest)
set(cpprestsdk_cpprest_SYSTEM_LIBS pthread)
set(cpprestsdk_cpprest_FRAMEWORK_DIRS )
set(cpprestsdk_cpprest_FRAMEWORKS )
set(cpprestsdk_cpprest_BUILD_MODULES_PATHS )
set(cpprestsdk_cpprest_DEPENDENCIES cpprestsdk::cpprestsdk_boost_internal cpprestsdk::cpprestsdk_openssl_internal cpprestsdk::cpprestsdk_zlib_internal cpprestsdk::cpprestsdk_websocketpp_internal)
set(cpprestsdk_cpprest_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)


########## FIND PACKAGE DEPENDENCY ##########################################################
#############################################################################################

include(CMakeFindDependencyMacro)

if(NOT Boost_FOUND)
    find_dependency(Boost REQUIRED)
else()
    conan_message(STATUS "Conan: Dependency Boost already found")
endif()

if(NOT OpenSSL_FOUND)
    find_dependency(OpenSSL REQUIRED)
else()
    conan_message(STATUS "Conan: Dependency OpenSSL already found")
endif()

if(NOT ZLIB_FOUND)
    find_dependency(ZLIB REQUIRED)
else()
    conan_message(STATUS "Conan: Dependency ZLIB already found")
endif()

if(NOT websocketpp_FOUND)
    find_dependency(websocketpp REQUIRED)
else()
    conan_message(STATUS "Conan: Dependency websocketpp already found")
endif()


########## FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #######################################
#############################################################################################

########## COMPONENT cpprestsdk_websocketpp_internal FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(cpprestsdk_cpprestsdk_websocketpp_internal_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(cpprestsdk_cpprestsdk_websocketpp_internal_FRAMEWORKS_FOUND "${cpprestsdk_cpprestsdk_websocketpp_internal_FRAMEWORKS}" "${cpprestsdk_cpprestsdk_websocketpp_internal_FRAMEWORK_DIRS}")

set(cpprestsdk_cpprestsdk_websocketpp_internal_LIB_TARGETS "")
set(cpprestsdk_cpprestsdk_websocketpp_internal_NOT_USED "")
set(cpprestsdk_cpprestsdk_websocketpp_internal_LIBS_FRAMEWORKS_DEPS ${cpprestsdk_cpprestsdk_websocketpp_internal_FRAMEWORKS_FOUND} ${cpprestsdk_cpprestsdk_websocketpp_internal_SYSTEM_LIBS} ${cpprestsdk_cpprestsdk_websocketpp_internal_DEPENDENCIES})
conan_package_library_targets("${cpprestsdk_cpprestsdk_websocketpp_internal_LIBS}"
                              "${cpprestsdk_cpprestsdk_websocketpp_internal_LIB_DIRS}"
                              "${cpprestsdk_cpprestsdk_websocketpp_internal_LIBS_FRAMEWORKS_DEPS}"
                              cpprestsdk_cpprestsdk_websocketpp_internal_NOT_USED
                              cpprestsdk_cpprestsdk_websocketpp_internal_LIB_TARGETS
                              ""
                              "cpprestsdk_cpprestsdk_websocketpp_internal")

set(cpprestsdk_cpprestsdk_websocketpp_internal_LINK_LIBS ${cpprestsdk_cpprestsdk_websocketpp_internal_LIB_TARGETS} ${cpprestsdk_cpprestsdk_websocketpp_internal_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH  ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH  ${CMAKE_PREFIX_PATH})

########## COMPONENT cpprestsdk_zlib_internal FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(cpprestsdk_cpprestsdk_zlib_internal_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(cpprestsdk_cpprestsdk_zlib_internal_FRAMEWORKS_FOUND "${cpprestsdk_cpprestsdk_zlib_internal_FRAMEWORKS}" "${cpprestsdk_cpprestsdk_zlib_internal_FRAMEWORK_DIRS}")

set(cpprestsdk_cpprestsdk_zlib_internal_LIB_TARGETS "")
set(cpprestsdk_cpprestsdk_zlib_internal_NOT_USED "")
set(cpprestsdk_cpprestsdk_zlib_internal_LIBS_FRAMEWORKS_DEPS ${cpprestsdk_cpprestsdk_zlib_internal_FRAMEWORKS_FOUND} ${cpprestsdk_cpprestsdk_zlib_internal_SYSTEM_LIBS} ${cpprestsdk_cpprestsdk_zlib_internal_DEPENDENCIES})
conan_package_library_targets("${cpprestsdk_cpprestsdk_zlib_internal_LIBS}"
                              "${cpprestsdk_cpprestsdk_zlib_internal_LIB_DIRS}"
                              "${cpprestsdk_cpprestsdk_zlib_internal_LIBS_FRAMEWORKS_DEPS}"
                              cpprestsdk_cpprestsdk_zlib_internal_NOT_USED
                              cpprestsdk_cpprestsdk_zlib_internal_LIB_TARGETS
                              ""
                              "cpprestsdk_cpprestsdk_zlib_internal")

set(cpprestsdk_cpprestsdk_zlib_internal_LINK_LIBS ${cpprestsdk_cpprestsdk_zlib_internal_LIB_TARGETS} ${cpprestsdk_cpprestsdk_zlib_internal_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH  ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH  ${CMAKE_PREFIX_PATH})

########## COMPONENT cpprestsdk_openssl_internal FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(cpprestsdk_cpprestsdk_openssl_internal_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(cpprestsdk_cpprestsdk_openssl_internal_FRAMEWORKS_FOUND "${cpprestsdk_cpprestsdk_openssl_internal_FRAMEWORKS}" "${cpprestsdk_cpprestsdk_openssl_internal_FRAMEWORK_DIRS}")

set(cpprestsdk_cpprestsdk_openssl_internal_LIB_TARGETS "")
set(cpprestsdk_cpprestsdk_openssl_internal_NOT_USED "")
set(cpprestsdk_cpprestsdk_openssl_internal_LIBS_FRAMEWORKS_DEPS ${cpprestsdk_cpprestsdk_openssl_internal_FRAMEWORKS_FOUND} ${cpprestsdk_cpprestsdk_openssl_internal_SYSTEM_LIBS} ${cpprestsdk_cpprestsdk_openssl_internal_DEPENDENCIES})
conan_package_library_targets("${cpprestsdk_cpprestsdk_openssl_internal_LIBS}"
                              "${cpprestsdk_cpprestsdk_openssl_internal_LIB_DIRS}"
                              "${cpprestsdk_cpprestsdk_openssl_internal_LIBS_FRAMEWORKS_DEPS}"
                              cpprestsdk_cpprestsdk_openssl_internal_NOT_USED
                              cpprestsdk_cpprestsdk_openssl_internal_LIB_TARGETS
                              ""
                              "cpprestsdk_cpprestsdk_openssl_internal")

set(cpprestsdk_cpprestsdk_openssl_internal_LINK_LIBS ${cpprestsdk_cpprestsdk_openssl_internal_LIB_TARGETS} ${cpprestsdk_cpprestsdk_openssl_internal_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH  ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH  ${CMAKE_PREFIX_PATH})

########## COMPONENT cpprestsdk_boost_internal FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(cpprestsdk_cpprestsdk_boost_internal_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(cpprestsdk_cpprestsdk_boost_internal_FRAMEWORKS_FOUND "${cpprestsdk_cpprestsdk_boost_internal_FRAMEWORKS}" "${cpprestsdk_cpprestsdk_boost_internal_FRAMEWORK_DIRS}")

set(cpprestsdk_cpprestsdk_boost_internal_LIB_TARGETS "")
set(cpprestsdk_cpprestsdk_boost_internal_NOT_USED "")
set(cpprestsdk_cpprestsdk_boost_internal_LIBS_FRAMEWORKS_DEPS ${cpprestsdk_cpprestsdk_boost_internal_FRAMEWORKS_FOUND} ${cpprestsdk_cpprestsdk_boost_internal_SYSTEM_LIBS} ${cpprestsdk_cpprestsdk_boost_internal_DEPENDENCIES})
conan_package_library_targets("${cpprestsdk_cpprestsdk_boost_internal_LIBS}"
                              "${cpprestsdk_cpprestsdk_boost_internal_LIB_DIRS}"
                              "${cpprestsdk_cpprestsdk_boost_internal_LIBS_FRAMEWORKS_DEPS}"
                              cpprestsdk_cpprestsdk_boost_internal_NOT_USED
                              cpprestsdk_cpprestsdk_boost_internal_LIB_TARGETS
                              ""
                              "cpprestsdk_cpprestsdk_boost_internal")

set(cpprestsdk_cpprestsdk_boost_internal_LINK_LIBS ${cpprestsdk_cpprestsdk_boost_internal_LIB_TARGETS} ${cpprestsdk_cpprestsdk_boost_internal_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH  ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH  ${CMAKE_PREFIX_PATH})

########## COMPONENT cpprest FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(cpprestsdk_cpprest_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(cpprestsdk_cpprest_FRAMEWORKS_FOUND "${cpprestsdk_cpprest_FRAMEWORKS}" "${cpprestsdk_cpprest_FRAMEWORK_DIRS}")

set(cpprestsdk_cpprest_LIB_TARGETS "")
set(cpprestsdk_cpprest_NOT_USED "")
set(cpprestsdk_cpprest_LIBS_FRAMEWORKS_DEPS ${cpprestsdk_cpprest_FRAMEWORKS_FOUND} ${cpprestsdk_cpprest_SYSTEM_LIBS} ${cpprestsdk_cpprest_DEPENDENCIES})
conan_package_library_targets("${cpprestsdk_cpprest_LIBS}"
                              "${cpprestsdk_cpprest_LIB_DIRS}"
                              "${cpprestsdk_cpprest_LIBS_FRAMEWORKS_DEPS}"
                              cpprestsdk_cpprest_NOT_USED
                              cpprestsdk_cpprest_LIB_TARGETS
                              ""
                              "cpprestsdk_cpprest")

set(cpprestsdk_cpprest_LINK_LIBS ${cpprestsdk_cpprest_LIB_TARGETS} ${cpprestsdk_cpprest_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH  ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH  ${CMAKE_PREFIX_PATH})


########## TARGETS ##########################################################################
#############################################################################################

########## COMPONENT cpprestsdk_websocketpp_internal TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET cpprestsdk::cpprestsdk_websocketpp_internal)
        add_library(cpprestsdk::cpprestsdk_websocketpp_internal INTERFACE IMPORTED)
        set_target_properties(cpprestsdk::cpprestsdk_websocketpp_internal PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${cpprestsdk_cpprestsdk_websocketpp_internal_INCLUDE_DIRS}")
        set_target_properties(cpprestsdk::cpprestsdk_websocketpp_internal PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${cpprestsdk_cpprestsdk_websocketpp_internal_LIB_DIRS}")
        set_target_properties(cpprestsdk::cpprestsdk_websocketpp_internal PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${cpprestsdk_cpprestsdk_websocketpp_internal_LINK_LIBS};${cpprestsdk_cpprestsdk_websocketpp_internal_LINKER_FLAGS_LIST}")
        set_target_properties(cpprestsdk::cpprestsdk_websocketpp_internal PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${cpprestsdk_cpprestsdk_websocketpp_internal_COMPILE_DEFINITIONS}")
        set_target_properties(cpprestsdk::cpprestsdk_websocketpp_internal PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${cpprestsdk_cpprestsdk_websocketpp_internal_COMPILE_OPTIONS_C};${cpprestsdk_cpprestsdk_websocketpp_internal_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT cpprestsdk_zlib_internal TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET cpprestsdk::cpprestsdk_zlib_internal)
        add_library(cpprestsdk::cpprestsdk_zlib_internal INTERFACE IMPORTED)
        set_target_properties(cpprestsdk::cpprestsdk_zlib_internal PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${cpprestsdk_cpprestsdk_zlib_internal_INCLUDE_DIRS}")
        set_target_properties(cpprestsdk::cpprestsdk_zlib_internal PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${cpprestsdk_cpprestsdk_zlib_internal_LIB_DIRS}")
        set_target_properties(cpprestsdk::cpprestsdk_zlib_internal PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${cpprestsdk_cpprestsdk_zlib_internal_LINK_LIBS};${cpprestsdk_cpprestsdk_zlib_internal_LINKER_FLAGS_LIST}")
        set_target_properties(cpprestsdk::cpprestsdk_zlib_internal PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${cpprestsdk_cpprestsdk_zlib_internal_COMPILE_DEFINITIONS}")
        set_target_properties(cpprestsdk::cpprestsdk_zlib_internal PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${cpprestsdk_cpprestsdk_zlib_internal_COMPILE_OPTIONS_C};${cpprestsdk_cpprestsdk_zlib_internal_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT cpprestsdk_openssl_internal TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET cpprestsdk::cpprestsdk_openssl_internal)
        add_library(cpprestsdk::cpprestsdk_openssl_internal INTERFACE IMPORTED)
        set_target_properties(cpprestsdk::cpprestsdk_openssl_internal PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${cpprestsdk_cpprestsdk_openssl_internal_INCLUDE_DIRS}")
        set_target_properties(cpprestsdk::cpprestsdk_openssl_internal PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${cpprestsdk_cpprestsdk_openssl_internal_LIB_DIRS}")
        set_target_properties(cpprestsdk::cpprestsdk_openssl_internal PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${cpprestsdk_cpprestsdk_openssl_internal_LINK_LIBS};${cpprestsdk_cpprestsdk_openssl_internal_LINKER_FLAGS_LIST}")
        set_target_properties(cpprestsdk::cpprestsdk_openssl_internal PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${cpprestsdk_cpprestsdk_openssl_internal_COMPILE_DEFINITIONS}")
        set_target_properties(cpprestsdk::cpprestsdk_openssl_internal PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${cpprestsdk_cpprestsdk_openssl_internal_COMPILE_OPTIONS_C};${cpprestsdk_cpprestsdk_openssl_internal_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT cpprestsdk_boost_internal TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET cpprestsdk::cpprestsdk_boost_internal)
        add_library(cpprestsdk::cpprestsdk_boost_internal INTERFACE IMPORTED)
        set_target_properties(cpprestsdk::cpprestsdk_boost_internal PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${cpprestsdk_cpprestsdk_boost_internal_INCLUDE_DIRS}")
        set_target_properties(cpprestsdk::cpprestsdk_boost_internal PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${cpprestsdk_cpprestsdk_boost_internal_LIB_DIRS}")
        set_target_properties(cpprestsdk::cpprestsdk_boost_internal PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${cpprestsdk_cpprestsdk_boost_internal_LINK_LIBS};${cpprestsdk_cpprestsdk_boost_internal_LINKER_FLAGS_LIST}")
        set_target_properties(cpprestsdk::cpprestsdk_boost_internal PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${cpprestsdk_cpprestsdk_boost_internal_COMPILE_DEFINITIONS}")
        set_target_properties(cpprestsdk::cpprestsdk_boost_internal PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${cpprestsdk_cpprestsdk_boost_internal_COMPILE_OPTIONS_C};${cpprestsdk_cpprestsdk_boost_internal_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT cpprest TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET cpprestsdk::cpprest)
        add_library(cpprestsdk::cpprest INTERFACE IMPORTED)
        set_target_properties(cpprestsdk::cpprest PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${cpprestsdk_cpprest_INCLUDE_DIRS}")
        set_target_properties(cpprestsdk::cpprest PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${cpprestsdk_cpprest_LIB_DIRS}")
        set_target_properties(cpprestsdk::cpprest PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${cpprestsdk_cpprest_LINK_LIBS};${cpprestsdk_cpprest_LINKER_FLAGS_LIST}")
        set_target_properties(cpprestsdk::cpprest PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${cpprestsdk_cpprest_COMPILE_DEFINITIONS}")
        set_target_properties(cpprestsdk::cpprest PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${cpprestsdk_cpprest_COMPILE_OPTIONS_C};${cpprestsdk_cpprest_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## GLOBAL TARGET ####################################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    if(NOT TARGET cpprestsdk::cpprestsdk)
        add_library(cpprestsdk::cpprestsdk INTERFACE IMPORTED)
    endif()
    set_property(TARGET cpprestsdk::cpprestsdk APPEND PROPERTY
                 INTERFACE_LINK_LIBRARIES "${cpprestsdk_COMPONENTS}")
endif()

########## BUILD MODULES ####################################################################
#############################################################################################
########## COMPONENT cpprestsdk_websocketpp_internal BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${cpprestsdk_cpprestsdk_websocketpp_internal_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT cpprestsdk_zlib_internal BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${cpprestsdk_cpprestsdk_zlib_internal_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT cpprestsdk_openssl_internal BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${cpprestsdk_cpprestsdk_openssl_internal_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT cpprestsdk_boost_internal BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${cpprestsdk_cpprestsdk_boost_internal_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT cpprest BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${cpprestsdk_cpprest_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
