name: CI Multiplatform Release

on:
  pull_request:
    branches: [main]
  push:
    branches:
      - "devCedrick"
      - "main"

jobs:
  ubuntuBuild:
    runs-on: ubuntu-22.04
    env:
      PACKAGE_NAME: Easystream-1.0.0-Linux.deb
    steps:
      - uses: actions/checkout@v2
      - name: Install deps
        run: |
          sudo apt-get update && sudo apt-get install -y \
            g++-multilib \
            gcc-multilib \
            git \
            wget \
      - name: OBS deps
        run: ./ci/linux/install-dependencies-ubuntu.sh
      - name: Compile
        run: ./ci/build-linux.sh -r "Release" -p


      # - name: check Release
      #   uses: mukunku/tag-exists-action@v1.2.0
      #   id: checkTag
      #   with:
      #     tag: ${{github.run_number}}

      - name: "Store Release Name"
        working-directory: ${{github.workspace}}
        run: echo "GITHUB_RELEASE_NAME=$(cat release_name)" >> $GITHUB_ENV

      - name: "Store Release Description"
        working-directory: ${{github.workspace}}
        run: echo "GITHUB_RELEASE_DESCRIPTION=$(cat release_description)" >> $GITHUB_ENV
      
      - name: Release
        id: EasystreamRelease
        uses: ncipollo/release-action@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allowUpdates: true
          tag: ${{github.run_number}}
          name: Release $GITHUB_RELEASE_NAME
          body: $GITHUB_RELEASE_DESCRIPTION

      - name: Get release
        id: get_release
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{github.run_number}}
  

      - name: Upload Setup
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: './build/${{env.PACKAGE_NAME}}'
          asset_name: easyStream.deb
          asset_content_type: application/octect-stream

        

      

  win64Build:
    name: "win64Build"
    runs-on: [windows-latest]
    env:
      CMAKE_GENERATOR: "Visual Studio 17 2022"
      CMAKE_SYSTEM_VERSION: "10.0.18363.657"
      WINDOWS_DEPS_VERSION: "2022"
      WINDOWS_DEPS_CACHE_VERSION: "1"
      PACKAGE_NAME: "Easystream-1.0.0-win64.exe"
      ZIP_PACKAGE_NAME: "Easystream-1.0.0-win64.zip"
      SOURCE_PACKAGE_NAME: "Easystream-1.0.0-Source.zip"
    steps:
      - name: "Add msbuild to PATH"
        uses: microsoft/setup-msbuild@v1.0.2
        with:
          vs-version: '['
      - name: "Checkout"
        uses: actions/checkout@v2.3.3
      # - name: "Restore QT dependency from cache"
      #   id: qt-cache
      #   uses: actions/cache@v2.1.2
      #   env:
      #     CACHE_NAME: "windows-qt-cache"
      #   with:
      #     path: ${{ github.workspace }}/cmbuild/QT
      #     key: ${{ runner.os }}-pr-${{ env.CACHE_NAME }}-${{ env.QT_VERSION }}
      - name: "Build OBS"
        working-directory: ${{github.workspace}}
        run: |
            pwsh ci/windows/genWindows.ps1 -Dependencies -CloneObs -BuildTypeObs Release -BuildType Release -Setup Source
      # - name: Package
      #   if: ${{ github.event_name == 'push' }}
      #   run: ci/windows/package-windows.cmd
      # - name: check Release
      #   uses: mukunku/tag-exists-action@v1.2.0
      #   id: checkTag
      #   with:
      #     tag: ${{github.run_number}}
      - name: "Store Release Name"
        working-directory: ${{github.workspace}}
        run: echo "GITHUB_RELEASE_NAME=$(cat release_name)" >> $GITHUB_ENV

      - name: "Store Release Description"
        working-directory: ${{github.workspace}}
        run: echo "GITHUB_RELEASE_DESCRIPTION=$(cat release_description)" >> $GITHUB_ENV

      - name: Release
        id: EasystreamRelease
        uses: ncipollo/release-action@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allowUpdates: true
          tag: ${{github.run_number}}
          name: Release $GITHB_RELEASE_NAME
          body: $GITHUB_RELEASE_DESCRIPTION
          

      - name: Get release
        id: get_release
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{github.run_number}}


      - name: Upload Setup Zip
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: './build/${{env.ZIP_PACKAGE_NAME}}'
          asset_name: easyStream64.zip
          asset_content_type: application/zip

      - name: Upload Setup
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: './build/${{env.PACKAGE_NAME}}'
          asset_name: easyStream64.exe
          asset_content_type: application/octect-stream

          

  
  # win32Build:
  #   name: "win32Build"
  #   runs-on: [windows-latest]
  #   env:
  #     CMAKE_GENERATOR: "Visual Studio 17 2022"
  #     CMAKE_SYSTEM_VERSION: "10.0.18363.657"
  #     WINDOWS_DEPS_VERSION: "2019"
  #     WINDOWS_DEPS_CACHE_VERSION: "1"
  #     PACKAGE_NAME: "Easystream-1.0.0-win64.exe"
  #     ZIP_PACKAGE_NAME: "Easystream-1.0.0-win64.zip"

  #   steps:
  #     - name: "Add msbuild to PATH"
  #       uses: microsoft/setup-msbuild@v1.0.2
  #     - name: "Checkout"
  #       uses: actions/checkout@v2.3.3
  #     - name: "Build OBS"
  #       working-directory: ${{github.workspace}}
  #       run: |
  #           pwsh ci/windows/genWindows.ps1 -Dependencies -CloneObs -BuildTypeObs Release -BuildType Release -Setup Setup
      
  #     # - name: check Release
  #     #   uses: mukunku/tag-exists-action@v1.2.0
  #     #   id: checkTag
  #     #   with:
  #     #     tag: ${{github.run_number}}

  #     - name: Release
  #       id: EasystreamRelease
  #       uses: ncipollo/release-action@v1
  #       env:
  #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         allowUpdates: true
  #         tag: ${{github.run_number}}
  #         name: Release ${{ github.run_number }}

  #     - name: Get release
  #       id: get_release
  #       uses: cardinalby/git-get-release-action@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag: ${{github.run_number}}

  #     - name: Upload Setup Zip
  #       uses: actions/upload-release-asset@v1
  #       env:
  #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.get_release.outputs.upload_url }}
  #         asset_path: './build/${{env.ZIP_PACKAGE_NAME}}'
  #         asset_name: easyStream32.zip
  #         asset_content_type: application/zip

  #     - name: Upload Setup
  #       uses: actions/upload-release-asset@v1
  #       env:
  #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.get_release.outputs.upload_url }}
  #         asset_path: './build/${{env.PACKAGE_NAME}}'
  #         asset_name: easyStream32.exe
  #         asset_content_type: application/octect-stream


    # macosBuild:
    # runs-on: macos-latest

    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@v2
    #   - name: Install deps
    #     run: ./ci/macos/install-dependencies-macos.sh
    #   - name: Install obs
    #     run: ./ci/macos/install-build-obs-macos.sh
    #   - name: Compile
    #     run: ./ci/macos/build-macos.sh
    #   - name: Package
    #     if: ${{ github.event_name == 'push' }}
    #     run: |
    #       wget http://s.sudre.free.fr/Software/files/Packages.dmg
    #       hdiutil attach Packages.dmg
    #       sudo installer -pkg /Volumes/Packages\ 1.2.9/Install\ Packages.pkg -target /
    #       ./ci/macos/package-macos.sh
    #   - name: Release
    #     if: ${{ github.event_name == 'push' }}
    #     uses: actions/upload-artifact@v2.2.0
    #     with:
    #       name: easyStream-plugin-macOS.dmg
    #       path: "release/*.dmg"
